package com.cts.controller;
 
import java.io.IOException;
import java.util.Date;
import java.util.List;
 
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
 
import com.cts.dto.RequestDTO;
import com.cts.dto.ResponseDTO;
import com.cts.dto.SignInRequest;
import com.cts.dto.SignInResponse;
import com.cts.exception.InvalidInputException;
import com.cts.service.UserService;
 
import jakarta.validation.Valid;
 
@RestController
 
@RequestMapping("/api/auth")
@CrossOrigin(origins="http://127.0.0.1:3000")
 
public class UserController {
 
	private static final Logger logger = LoggerFactory.getLogger(UserController.class);
 
	@Autowired
 
	private UserService userService;
 
	// @PostMapping("/register")
    // public ResponseDTO createUser(@RequestBody @Valid RequestDTO requestDTO) {
    //     logger.info("Received POST request to /register with data: {}", requestDTO);
    //     if (requestDTO.getFirstName().isBlank() || requestDTO.getLastName().isBlank() || !requestDTO.getEmail().contains("@") || requestDTO.getPassword().isBlank() || requestDTO.getAddress().isBlank() || requestDTO.getContactNumber().isBlank() || requestDTO.getDateOfBirth() == null) {
    //         throw new InvalidInputException("Invalid input");
    //     }
    //     return userService.createUser(requestDTO);
    // }
	  @PostMapping("/register") //consumes = MediaType.MAULTIPART_FORM_DATA_VALUE
		public ResponseDTO createUser(@ModelAttribute RequestDTO requestDTO) throws IOException {
//			if (requestDTO.getFirstName().isBlank() || requestDTO.getLastName().isBlank() || !requestDTO.getEmail().contains("@") || requestDTO.getPassword().isBlank() || requestDTO.getAddress().isBlank() || requestDTO.getContactNumber().isBlank() || requestDTO.getDateOfBirth()==null) {
//	            throw new InvalidInputException("Invalid input");
//	        }
		  
		
			return userService.createUser(requestDTO);
		}
	
	
	
	
	
//    @PostMapping("/register") //consumes = MediaType.MAULTIPART_FORM_DATA_VALUE
//	public ResponseDTO createUser(@RequestPart("requestDTO") @Valid RequestDTO requestDTO,
//			@RequestPart("photo") MultipartFile imageFile) throws IOException {
//		if (requestDTO.getFirstName().isBlank() || requestDTO.getLastName().isBlank() || !requestDTO.getEmail().contains("@") || requestDTO.getPassword().isBlank() || requestDTO.getAddress().isBlank() || requestDTO.getContactNumber().isBlank() || requestDTO.getDateOfBirth()==null) {
//            throw new InvalidInputException("Invalid input");
//        }
//		return userService.createUser(requestDTO,imageFile);
//	}
 
    @GetMapping
    public List<ResponseDTO> getAllUser() {
        logger.info("Received GET request to /register");
        return userService.getAllUsers();
    }
 
    @PostMapping("/login")
    public ResponseEntity<SignInResponse> loginUser( @RequestBody SignInRequest signInRequest) {
        System.out.println(userService.validateUser(signInRequest));
        return ResponseEntity.ok(userService.validateUser(signInRequest));
    }
 
}
 
 