package com.cts.service;

import java.time.LocalDate;
import java.time.Period;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cts.dto.RequestDTO;
import com.cts.dto.ResponseDTO;
import com.cts.entity.User;
import com.cts.exception.AgeValidationException;
import com.cts.mapper.UserMapper;
import com.cts.repository.UserRepository;

@Service
public class UserService {
    
    @Autowired
    private UserRepository userRepository;
    
    public ResponseDTO createUser(RequestDTO requestDTO) {
        validateAge(requestDTO.getDateOfBirth());
        User user = UserMapper.toEntity(requestDTO);
        User savedUser = userRepository.save(user);
        return UserMapper.toDTO(savedUser);
    }
    
    public List<ResponseDTO> getAllUsers() {
        return userRepository.findAll().stream()
                .map(UserMapper::toDTO)
                .collect(Collectors.toList());
    }
    
    private void validateAge(Date dateOfBirth) {
        LocalDate birthDate = new java.sql.Date(dateOfBirth.getTime()).toLocalDate();
        int age = Period.between(birthDate, LocalDate.now()).getYears();
        if (age < 18) {
            throw new AgeValidationException("User must be at least 18 years old.");
        }
    }
}